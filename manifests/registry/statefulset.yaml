---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: registry
  namespace: registry-system
spec:
  serviceName: registry
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
        app.kubernetes.io/name: registry
        app.kubernetes.io/component: server
        app.kubernetes.io/part-of: registry
    spec:
      restartPolicy: Always
      securityContext:
        fsGroup: 1002130000
        seLinuxOptions:
          level: s0:c46,c30
      terminationGracePeriodSeconds: 30
      #volumes:
        #- name: tmp-vol
          #persistentVolumeClaim:
            #claimName: tmp-vol-claim
      containers:
      - name: registry
        image: docker.io/library/registry:2
        imagePullPolicy: IfNotPresent
        securityContext:
          capabilities:
            drop: ["all"]
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          runAsUser: 1002130000
        ports:
        - name: registry
          containerPort: 5000
          protocol: TCP
        #resources:
          #requests:
            #cpu: 5m
            #memory: 500Mi
          #limits:
            #cpu: 250m
            #memory: 1Gi
        #volumeMounts:
          #- name: "data"
            #mountPath: "/var/lib/registry"
          #-name: "config"
            #- mountPath: "/etc/docker/registry"
        #env:
        #- name: HOME
          #value: "/var/dcs_9.0/db/home/cgi"
        livenessProbe:
          httpGet:
            path: /v2/
            port: registry
        readinessProbe:
          httpGet:
            path: /v2/
            port: registry